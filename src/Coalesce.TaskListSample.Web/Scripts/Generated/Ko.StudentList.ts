
/// <reference path="../coalesce.dependencies.d.ts" />

// Knockout List View Model for: Student
// Auto Generated by IntelliTect.Coalesce

var baseUrl = baseUrl || '';

module ListViewModels {

    // Add an enum for all methods that are static and IQueryable
    export enum StudentDataSources {
            Default,
        }
    export class StudentList extends Coalesce.BaseListViewModel<StudentList, ViewModels.Student> {
        protected modelName = "Student";

        protected apiController = "/Student";

        public modelKeyName = "studentID";
        public dataSources = StudentDataSources;
        public itemClass = ViewModels.Student;

        public query: {
            where?: string;
            studentID?:number;
            enrollmentDate?:moment.Moment;
            lastName?:String;
            firstMidName?:String;
            fullName?:String;
            fullNameCalculated?:String;
        } = null;

        // The custom code to run in order to pull the initial datasource to use for the collection that should be returned
        public listDataSource: StudentDataSources = StudentDataSources.Default;

        public static coalesceConfig = new Coalesce.ListViewModelConfiguration<StudentList, ViewModels.Student>(Coalesce.GlobalConfiguration.listViewModel);
        public coalesceConfig = new Coalesce.ListViewModelConfiguration<StudentList, ViewModels.Student>(StudentList.coalesceConfig);

        // Valid values
    
        protected createItem = (newItem?: any, parent?: any) => new ViewModels.Student(newItem, parent);

        constructor() {
            super();
        }
    }

    export namespace StudentList {
        // Classes for use in method calls to support data binding for input for arguments
    }
}