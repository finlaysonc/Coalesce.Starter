
/// <reference path="../coalesce.dependencies.d.ts" />

// Knockout List View Model for: ShortBlog
// Auto Generated by IntelliTect.Coalesce

var baseUrl = baseUrl || '';

module ListViewModels {

    // Add an enum for all methods that are static and IQueryable
    export enum ShortBlogDataSources {
            Default,
        }
    export class ShortBlogList extends Coalesce.BaseListViewModel<ShortBlogList, ViewModels.ShortBlog> {
        protected modelName = "ShortBlog";

        protected apiController = "/ShortBlog";

        public modelKeyName = "blogId";
        public dataSources = ShortBlogDataSources;
        public itemClass = ViewModels.ShortBlog;

        public query: {
            where?: string;
            blogId?:number;
            url?:String;
        } = null;

        // The custom code to run in order to pull the initial datasource to use for the collection that should be returned
        public listDataSource: ShortBlogDataSources = ShortBlogDataSources.Default;

        public static coalesceConfig = new Coalesce.ListViewModelConfiguration<ShortBlogList, ViewModels.ShortBlog>(Coalesce.GlobalConfiguration.listViewModel);
        public coalesceConfig = new Coalesce.ListViewModelConfiguration<ShortBlogList, ViewModels.ShortBlog>(ShortBlogList.coalesceConfig);

        // Valid values
    
        protected createItem = (newItem?: any, parent?: any) => new ViewModels.ShortBlog(newItem, parent);

        constructor() {
            super();
        }
    }

    export namespace ShortBlogList {
        // Classes for use in method calls to support data binding for input for arguments
    }
}